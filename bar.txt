<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bar Graph with D3.js</title>
    <script src="https://d3js.org/d3.v7.min.js"></script>
</head>
<body>
<script>
    // Set up the SVG canvas dimensions
    const width = 400;
    const height = 400;
    const margin = { top: 50, right: 50, bottom: 50, left: 50 };
    const innerWidth = width - margin.left - margin.right;
    const innerHeight = height - margin.top - margin.bottom;

    // Append SVG canvas to the body
    const svg = d3.select("body")
        .append("svg")
        .attr("width", width)
        .attr("height", height)
        .append("g")
        .attr("transform", `translate(${margin.left},${margin.top})`);

    // Load CSV data
    d3.csv("data.csv").then(data => {
        // Title for the bar graph
        svg.append("text")
            .attr("x", innerWidth / 2)
            .attr("y", -margin.top / 2)
            .attr("text-anchor", "middle")
            .style("font-size", "12px")
            .text("DISTRIBUTION OF NODES AMONG COMPUTING PLATFORMS");

        // Create scales for x and y axes
        const xScale = d3.scaleBand()
            .domain(data.map(d => d.Computing_platform))
            .range([0, innerWidth])
            .padding(0.1);

        const yScale = d3.scaleLinear()
            .domain([0, 150])
            .nice()
            .range([innerHeight, 0]);

        // Create bars
        svg.selectAll(".bar")
            .data(data)
            .enter()
            .append("rect")
            .attr("class", "bar")
            .attr("x", d => xScale(d.Computing_platform))
            .attr("y", d => yScale(d.Number_of_nodes))
            .attr("width", xScale.bandwidth())
            .attr("height", d => innerHeight - yScale(d.Number_of_nodes))
            .attr("fill", "steelblue");

        // Create x-axis
        svg.append("g")
            .attr("transform", `translate(0,${innerHeight})`)
            .call(d3.axisBottom(xScale))
            .selectAll("text")
            .attr("transform", "rotate(-45)")
            .style("text-anchor", "end");

        // Create y-axis
        svg.append("g")
            .call(d3.axisLeft(yScale));
    }).catch(error => {
        console.error("Error loading the data: ", error);
    });
</script>
</body>
</html>
